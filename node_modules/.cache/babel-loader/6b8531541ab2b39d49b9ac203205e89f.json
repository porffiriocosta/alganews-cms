{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { UserService } from \"danielbonifacio-sdk\";\nimport AuthService from \"../../auth/Authorization.service\";\nconst initialState = {\n  user: null,\n  fetching: false\n};\nexport const fetchUser = createAsyncThunk(\"auth/fetchUser\", async (userId, {\n  rejectWithValue,\n  dispatch\n}) => {\n  try {\n    const user = await UserService.getDetailedUser(userId);\n\n    if (user.role !== \"EDITOR\") {\n      window.alert(\"Você não tem acesso a este sistema\");\n      AuthService.imperativelySendToLogout();\n      return;\n    }\n\n    dispatch(storeUser(user));\n  } catch (err) {\n    return rejectWithValue({ ...err\n    });\n  }\n});\nconst authSlice = createSlice({\n  initialState,\n  name: \"auth\",\n  reducers: {\n    storeUser(state, action) {\n      state.user = action.payload;\n    },\n\n    clearUser(state) {\n      state.user = null;\n    }\n\n  }\n});\nexport const {\n  storeUser,\n  clearUser\n} = authSlice.actions;\nconst authReducer = authSlice.reducer;\nexport default authReducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/store/Auth.slice.ts"],"names":["createAsyncThunk","createSlice","UserService","AuthService","initialState","user","fetching","fetchUser","userId","rejectWithValue","dispatch","getDetailedUser","role","window","alert","imperativelySendToLogout","storeUser","err","authSlice","name","reducers","state","action","payload","clearUser","actions","authReducer","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA6D,kBAA7D;AACA,SAAeC,WAAf,QAAkC,qBAAlC;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AASA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,IAAI,EAAE,IADwB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAhC;AAKA,OAAO,MAAMC,SAAS,GAAGP,gBAAgB,CACvC,gBADuC,EAEvC,OAAOQ,MAAP,EAAuB;AAAEC,EAAAA,eAAF;AAAmBC,EAAAA;AAAnB,CAAvB,KAAyD;AACvD,MAAI;AACF,UAAML,IAAI,GAAG,MAAMH,WAAW,CAACS,eAAZ,CAA4BH,MAA5B,CAAnB;;AACA,QAAIH,IAAI,CAACO,IAAL,KAAc,QAAlB,EAA4B;AAC1BC,MAAAA,MAAM,CAACC,KAAP,CAAa,oCAAb;AACAX,MAAAA,WAAW,CAACY,wBAAZ;AACA;AACD;;AACDL,IAAAA,QAAQ,CAACM,SAAS,CAACX,IAAD,CAAV,CAAR;AACD,GARD,CAQE,OAAOY,GAAP,EAAY;AACZ,WAAOR,eAAe,CAAC,EAAE,GAAGQ;AAAL,KAAD,CAAtB;AACD;AACF,CAdsC,CAAlC;AAiBP,MAAMC,SAAS,GAAGjB,WAAW,CAAC;AAC5BG,EAAAA,YAD4B;AAE5Be,EAAAA,IAAI,EAAE,MAFsB;AAG5BC,EAAAA,QAAQ,EAAE;AACRJ,IAAAA,SAAS,CAACK,KAAD,EAAQC,MAAR,EAAmC;AAC1CD,MAAAA,KAAK,CAAChB,IAAN,GAAaiB,MAAM,CAACC,OAApB;AACD,KAHO;;AAIRC,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAAChB,IAAN,GAAa,IAAb;AACD;;AANO;AAHkB,CAAD,CAA7B;AAaA,OAAO,MAAM;AAAEW,EAAAA,SAAF;AAAaQ,EAAAA;AAAb,IAA2BN,SAAS,CAACO,OAA3C;AAEP,MAAMC,WAAW,GAAGR,SAAS,CAACS,OAA9B;AACA,eAAeD,WAAf","sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { User, UserService } from \"danielbonifacio-sdk\";\nimport AuthService from \"../../auth/Authorization.service\";\n\ntype PA<T> = PayloadAction<T>;\n\ninterface AuthState {\n  user: User.Detailed | null;\n  fetching: boolean;\n}\n\nconst initialState: AuthState = {\n  user: null,\n  fetching: false,\n};\n\nexport const fetchUser = createAsyncThunk(\n  \"auth/fetchUser\",\n  async (userId: number, { rejectWithValue, dispatch }) => {\n    try {\n      const user = await UserService.getDetailedUser(userId);\n      if (user.role !== \"EDITOR\") {\n        window.alert(\"Você não tem acesso a este sistema\");\n        AuthService.imperativelySendToLogout();\n        return;\n      }\n      dispatch(storeUser(user));\n    } catch (err) {\n      return rejectWithValue({ ...err });\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  initialState,\n  name: \"auth\",\n  reducers: {\n    storeUser(state, action: PA<User.Detailed>) {\n      state.user = action.payload;\n    },\n    clearUser(state) {\n      state.user = null;\n    },\n  },\n});\n\nexport const { storeUser, clearUser } = authSlice.actions;\n\nconst authReducer = authSlice.reducer;\nexport default authReducer;\n"]},"metadata":{},"sourceType":"module"}