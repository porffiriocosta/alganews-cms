{"ast":null,"code":"export default function countWordsInMarkdown(markdownString) {\n  let text = markdownString;\n  if (text === '') return 0; // Comments\n\n  text = text.replace(/<!--(.*?)-->/gi, ''); // Tabs to spaces\n\n  text = text.replace(/\\t/gi, ' '); // More than 1 space to 4 spaces\n\n  text = text.replace(/[ ]{2,}/gi, ' '); // Footnotes\n\n  text = text.replace(/^\\\\[[^]]*\\\\][^(].*/gi, ''); // Indented blocks of code\n\n  text = text.replace(/^( {4,}[^-*]).*/gi, ''); // Custom header IDs\n\n  text = text.replace(/\\\\{#.*}/gi, ''); // Replace newlines with spaces for uniform handling\n\n  text = text.replace(/\\n/gi, ' '); // Remove images\n\n  text = text.replace(/!\\\\[[^\\\\]]*\\\\]\\\\([^)]*\\\\)/gi, ''); // Remove HTML tags\n\n  text = text.replace(/<\\/?[^>]*>/gi, ''); // Remove special characters\n\n  text = text.replace(/[#*`~\\\\\\-–^=<>+|/:]/gi, ''); // Remove footnote references\n\n  text = text.replace(/\\\\[[0-9]*\\\\]/gi, ''); // Remove enumerations\n\n  text = text.replace(/[0-9#]*\\\\./gi, ''); // Remove duplicated chars\n\n  text = text.replace(/\\\\s{2,}/gi, ' ').trim(); // Replace whitespace with separator\n\n  text = text.replace(/\\s/gi, \"|\"); // replace multiples separators\n\n  text = text.replace(/\\|{2,99}/gi, '|'); // Slip words and ignore the separator\n\n  return text.split('|').length;\n}","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/utils/countWordsInMarkdown.ts"],"names":["countWordsInMarkdown","markdownString","text","replace","trim","split","length"],"mappings":"AAAA,eAAe,SAASA,oBAAT,CAA+BC,cAA/B,EAAuD;AACpE,MAAIC,IAAI,GAAGD,cAAX;AAEA,MAAIC,IAAI,KAAK,EAAb,EACE,OAAO,CAAP,CAJkE,CAMpE;;AACAA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,gBAAb,EAA+B,EAA/B,CAAP,CAPoE,CAQpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAToE,CAUpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,WAAb,EAA0B,GAA1B,CAAP,CAXoE,CAYpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,sBAAb,EAAqC,EAArC,CAAP,CAboE,CAcpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,mBAAb,EAAkC,EAAlC,CAAP,CAfoE,CAgBpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAAP,CAjBoE,CAkBpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAnBoE,CAoBpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,6BAAb,EAA4C,EAA5C,CAAP,CArBoE,CAsBpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,cAAb,EAA6B,EAA7B,CAAP,CAvBoE,CAwBpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,uBAAb,EAAsC,EAAtC,CAAP,CAzBoE,CA0BpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,gBAAb,EAA+B,EAA/B,CAAP,CA3BoE,CA4BpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,cAAb,EAA6B,EAA7B,CAAP,CA7BoE,CA8BpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,WAAb,EAA0B,GAA1B,EAA+BC,IAA/B,EAAP,CA/BoE,CAgCpE;;AACAF,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,MAAb,EAAqB,GAArB,CAAP,CAjCoE,CAkCpE;;AACAD,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAa,YAAb,EAA2B,GAA3B,CAAP,CAnCoE,CAoCpE;;AACA,SAAOD,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgBC,MAAvB;AACD","sourcesContent":["export default function countWordsInMarkdown (markdownString: string) {\r\n  let text = markdownString\r\n\r\n  if (text === '')\r\n    return 0\r\n\r\n  // Comments\r\n  text = text.replace(/<!--(.*?)-->/gi, '');\r\n  // Tabs to spaces\r\n  text = text.replace(/\\t/gi, ' ');\r\n  // More than 1 space to 4 spaces\r\n  text = text.replace(/[ ]{2,}/gi, ' ');\r\n  // Footnotes\r\n  text = text.replace(/^\\\\[[^]]*\\\\][^(].*/gi, '');\r\n  // Indented blocks of code\r\n  text = text.replace(/^( {4,}[^-*]).*/gi, '');\r\n  // Custom header IDs\r\n  text = text.replace(/\\\\{#.*}/gi, '');\r\n  // Replace newlines with spaces for uniform handling\r\n  text = text.replace(/\\n/gi, ' ');\r\n  // Remove images\r\n  text = text.replace(/!\\\\[[^\\\\]]*\\\\]\\\\([^)]*\\\\)/gi, '');\r\n  // Remove HTML tags\r\n  text = text.replace(/<\\/?[^>]*>/gi, '');\r\n  // Remove special characters\r\n  text = text.replace(/[#*`~\\\\\\-–^=<>+|/:]/gi, '');\r\n  // Remove footnote references\r\n  text = text.replace(/\\\\[[0-9]*\\\\]/gi, '');\r\n  // Remove enumerations\r\n  text = text.replace(/[0-9#]*\\\\./gi, '');\r\n  // Remove duplicated chars\r\n  text = text.replace(/\\\\s{2,}/gi, ' ').trim();\r\n  // Replace whitespace with separator\r\n  text = text.replace(/\\s/gi, \"|\");\r\n  // replace multiples separators\r\n  text = text.replace(/\\|{2,99}/gi, '|')\r\n  // Slip words and ignore the separator\r\n  return text.split('|').length;\r\n}"]},"metadata":{},"sourceType":"module"}