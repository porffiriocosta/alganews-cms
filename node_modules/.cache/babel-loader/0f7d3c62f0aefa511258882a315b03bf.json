{"ast":null,"code":"import { createAsyncThunk, createSlice, isFulfilled, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { UserService } from \"danielbonifacio-sdk\";\nexport const fetchEditors = createAsyncThunk(\"user/fetchEditors\", async function () {\n  const editors = await UserService.getAllEditors();\n  return editors;\n});\nconst initialState = {\n  fetching: false,\n  editors: []\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n\n  extraReducers(builder) {\n    const pendingActions = isPending(fetchEditors);\n    const fulfilledActions = isFulfilled(fetchEditors);\n    const rejectedActions = isRejected(fetchEditors);\n    builder.addMatcher(pendingActions, state => {\n      state.fetching = true;\n    }).addMatcher(fulfilledActions, state => {\n      state.fetching = false;\n    }).addMatcher(rejectedActions, state => {\n      state.fetching = false;\n    });\n  }\n\n});\nexport const userReducer = userSlice.reducer;","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/store/User.slice.ts"],"names":["createAsyncThunk","createSlice","isFulfilled","isPending","isRejected","UserService","fetchEditors","editors","getAllEditors","initialState","fetching","userSlice","name","reducers","extraReducers","builder","pendingActions","fulfilledActions","rejectedActions","addMatcher","state","userReducer","reducer"],"mappings":"AAAA,SACEA,gBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,kBANP;AAOA,SAAeC,WAAf,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAC1C,mBAD0C,EAE1C,kBAAkB;AAChB,QAAMO,OAAO,GAAG,MAAMF,WAAW,CAACG,aAAZ,EAAtB;AACA,SAAOD,OAAP;AACD,CALyC,CAArC;AAaP,MAAME,YAA4B,GAAG;AACnCC,EAAAA,QAAQ,EAAE,KADyB;AAEnCH,EAAAA,OAAO,EAAE;AAF0B,CAArC;AAKA,MAAMI,SAAS,GAAGV,WAAW,CAAC;AAC5BW,EAAAA,IAAI,EAAE,MADsB;AAE5BH,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE,EAHkB;;AAI5BC,EAAAA,aAAa,CAACC,OAAD,EAAU;AACrB,UAAMC,cAAc,GAAGb,SAAS,CAACG,YAAD,CAAhC;AACA,UAAMW,gBAAgB,GAAGf,WAAW,CAACI,YAAD,CAApC;AACA,UAAMY,eAAe,GAAGd,UAAU,CAACE,YAAD,CAAlC;AAEAS,IAAAA,OAAO,CACJI,UADH,CACcH,cADd,EAC+BI,KAAD,IAAW;AACrCA,MAAAA,KAAK,CAACV,QAAN,GAAiB,IAAjB;AACD,KAHH,EAIGS,UAJH,CAIcF,gBAJd,EAIiCG,KAAD,IAAW;AACvCA,MAAAA,KAAK,CAACV,QAAN,GAAiB,KAAjB;AACD,KANH,EAOGS,UAPH,CAOcD,eAPd,EAOgCE,KAAD,IAAW;AACtCA,MAAAA,KAAK,CAACV,QAAN,GAAiB,KAAjB;AACD,KATH;AAUD;;AAnB2B,CAAD,CAA7B;AAsBA,OAAO,MAAMW,WAAW,GAAGV,SAAS,CAACW,OAA9B","sourcesContent":["import {\n  createAsyncThunk,\n  createSlice,\n  isFulfilled,\n  isPending,\n  isRejected,\n} from \"@reduxjs/toolkit\";\nimport { User, UserService } from \"danielbonifacio-sdk\";\n\nexport const fetchEditors = createAsyncThunk(\n  \"user/fetchEditors\",\n  async function () {\n    const editors = await UserService.getAllEditors();\n    return editors;\n  }\n);\n\ninterface UserSliceState {\n  editors: User.EditorSummary[];\n  fetching: boolean;\n}\n\nconst initialState: UserSliceState = {\n  fetching: false,\n  editors: [],\n};\n\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers(builder) {\n    const pendingActions = isPending(fetchEditors);\n    const fulfilledActions = isFulfilled(fetchEditors);\n    const rejectedActions = isRejected(fetchEditors);\n\n    builder\n      .addMatcher(pendingActions, (state) => {\n        state.fetching = true;\n      })\n      .addMatcher(fulfilledActions, (state) => {\n        state.fetching = false;\n      })\n      .addMatcher(rejectedActions, (state) => {\n        state.fetching = false;\n      });\n  },\n});\n\nexport const userReducer = userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}