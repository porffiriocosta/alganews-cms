{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactProjetos\\\\alganews-cms\\\\src\\\\app\\\\components\\\\TagInput\\\\TagInput.tsx\";\nimport * as TI from './TagInput.styles';\nimport { WithContext as ReactTagInput } from 'react-tag-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n  tab: 9\n};\n\nfunction TagInput(props) {\n  return /*#__PURE__*/_jsxDEV(TI.Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(ReactTagInput, {\n      placeholder: props.placeholder,\n      handleAddition: props.onAdd,\n      handleDelete: props.onDelete,\n      allowDragDrop: false,\n      autofocus: false,\n      tags: props.tags,\n      delimiters: [KeyCodes.comma, KeyCodes.enter, KeyCodes.tab]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n\n_c = TagInput;\nexport default TagInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagInput\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/app/components/TagInput/TagInput.tsx"],"names":["TI","WithContext","ReactTagInput","KeyCodes","comma","enter","tab","TagInput","props","placeholder","onAdd","onDelete","tags"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,mBAApB;AACA,SAASC,WAAW,IAAIC,aAAxB,QAAkD,iBAAlD;;AASA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,KAAK,EAAE,GADQ;AAEfC,EAAAA,KAAK,EAAE,EAFQ;AAGfC,EAAAA,GAAG,EAAE;AAHU,CAAjB;;AAMA,SAASC,QAAT,CAAmBC,KAAnB,EAAyC;AACvC,sBAAO,QAAC,EAAD,CAAI,OAAJ;AAAA,2BACL,QAAC,aAAD;AACE,MAAA,WAAW,EAAEA,KAAK,CAACC,WADrB;AAEE,MAAA,cAAc,EAAED,KAAK,CAACE,KAFxB;AAGE,MAAA,YAAY,EAAEF,KAAK,CAACG,QAHtB;AAIE,MAAA,aAAa,EAAE,KAJjB;AAKE,MAAA,SAAS,EAAE,KALb;AAME,MAAA,IAAI,EAAEH,KAAK,CAACI,IANd;AAOE,MAAA,UAAU,EAAE,CAACT,QAAQ,CAACC,KAAV,EAAiBD,QAAQ,CAACE,KAA1B,EAAiCF,QAAQ,CAACG,GAA1C;AAPd;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD;;KAZQC,Q;AAcT,eAAeA,QAAf","sourcesContent":["import * as TI from './TagInput.styles'\r\nimport { WithContext as ReactTagInput, Tag } from 'react-tag-input'\r\n\r\nexport interface TagInputProps {\r\n  onAdd: (tag: Tag) => any\r\n  onDelete: (i: number) => any\r\n  placeholder: string\r\n  tags: Tag[]\r\n}\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n  tab: 9\r\n}\r\n\r\nfunction TagInput (props: TagInputProps) {\r\n  return <TI.Wrapper>\r\n    <ReactTagInput\r\n      placeholder={props.placeholder}\r\n      handleAddition={props.onAdd}\r\n      handleDelete={props.onDelete}\r\n      allowDragDrop={false}\r\n      autofocus={false}\r\n      tags={props.tags}\r\n      delimiters={[KeyCodes.comma, KeyCodes.enter, KeyCodes.tab]}\r\n    />\r\n  </TI.Wrapper>\r\n}\r\n\r\nexport default TagInput"]},"metadata":{},"sourceType":"module"}