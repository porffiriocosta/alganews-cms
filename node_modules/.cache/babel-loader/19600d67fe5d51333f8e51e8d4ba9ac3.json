{"ast":null,"code":"import { createAsyncThunk, createReducer, isFulfilled, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { UserService } from \"danielbonifacio-sdk\";\nexport const fetchAllEditors = createAsyncThunk(\"editor/fetchAllEditors\", async function () {\n  return UserService.getAllEditors();\n});\nconst initialState = {\n  editorsList: [],\n  fetching: false\n};\nexport const editorReducer = createReducer(initialState, builder => {\n  const pending = isPending(fetchAllEditors);\n  const rejected = isRejected(fetchAllEditors);\n  const fulfilled = isFulfilled(fetchAllEditors);\n  builder.addCase(fetchAllEditors.fulfilled, (state, action) => {\n    state.editorsList = action.payload;\n  }).addMatcher(pending, state => {\n    state.fetching = true;\n  }).addMatcher(rejected, state => {\n    state.fetching = false;\n  }).addMatcher(fulfilled, state => {\n    state.fetching = false;\n  });\n});","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/store/Editor.store.ts"],"names":["createAsyncThunk","createReducer","isFulfilled","isPending","isRejected","UserService","fetchAllEditors","getAllEditors","initialState","editorsList","fetching","editorReducer","builder","pending","rejected","fulfilled","addCase","state","action","payload","addMatcher"],"mappings":"AAAA,SACEA,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,kBANP;AAOA,SAAeC,WAAf,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,eAAe,GAAGN,gBAAgB,CAC7C,wBAD6C,EAE7C,kBAAkB;AAChB,SAAOK,WAAW,CAACE,aAAZ,EAAP;AACD,CAJ4C,CAAxC;AAYP,MAAMC,YAA8B,GAAG;AACrCC,EAAAA,WAAW,EAAE,EADwB;AAErCC,EAAAA,QAAQ,EAAE;AAF2B,CAAvC;AAKA,OAAO,MAAMC,aAAa,GAAGV,aAAa,CAACO,YAAD,EAAgBI,OAAD,IAAa;AACpE,QAAMC,OAAO,GAAGV,SAAS,CAACG,eAAD,CAAzB;AACA,QAAMQ,QAAQ,GAAGV,UAAU,CAACE,eAAD,CAA3B;AACA,QAAMS,SAAS,GAAGb,WAAW,CAACI,eAAD,CAA7B;AAEAM,EAAAA,OAAO,CACJI,OADH,CACWV,eAAe,CAACS,SAD3B,EACsC,CAACE,KAAD,EAAQC,MAAR,KAAmB;AACrDD,IAAAA,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;AACD,GAHH,EAIGC,UAJH,CAIcP,OAJd,EAIwBI,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACP,QAAN,GAAiB,IAAjB;AACD,GANH,EAOGU,UAPH,CAOcN,QAPd,EAOyBG,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACP,QAAN,GAAiB,KAAjB;AACD,GATH,EAUGU,UAVH,CAUcL,SAVd,EAU0BE,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACP,QAAN,GAAiB,KAAjB;AACD,GAZH;AAaD,CAlByC,CAAnC","sourcesContent":["import {\n  createAsyncThunk,\n  createReducer,\n  isFulfilled,\n  isPending,\n  isRejected,\n} from \"@reduxjs/toolkit\";\nimport { User, UserService } from \"danielbonifacio-sdk\";\n\nexport const fetchAllEditors = createAsyncThunk(\n  \"editor/fetchAllEditors\",\n  async function () {\n    return UserService.getAllEditors();\n  }\n);\n\ninterface EditorStoreState {\n  fetching: boolean;\n  editorsList: User.EditorSummary[];\n}\n\nconst initialState: EditorStoreState = {\n  editorsList: [],\n  fetching: false,\n};\n\nexport const editorReducer = createReducer(initialState, (builder) => {\n  const pending = isPending(fetchAllEditors);\n  const rejected = isRejected(fetchAllEditors);\n  const fulfilled = isFulfilled(fetchAllEditors);\n\n  builder\n    .addCase(fetchAllEditors.fulfilled, (state, action) => {\n      state.editorsList = action.payload;\n    })\n    .addMatcher(pending, (state) => {\n      state.fetching = true;\n    })\n    .addMatcher(rejected, (state) => {\n      state.fetching = false;\n    })\n    .addMatcher(fulfilled, (state) => {\n      state.fetching = false;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}