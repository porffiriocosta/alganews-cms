{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as EditorActions from \"../store/Editor.store\";\nexport default function useEditors() {\n  _s();\n\n  const dispatch = useDispatch();\n  const loading = useSelector(state => state.editor.fetching);\n  const editorsList = useSelector(state => state.editor.editorsList);\n  const fetchAllEditors = useCallback(async function () {\n    dispatch(EditorActions.fetchAllEditors());\n  }, [dispatch]);\n  return {\n    loading,\n    editorsList,\n    fetchAllEditors\n  };\n}\n\n_s(useEditors, \"e/NE5bqZMKq+fgB628Pn0Td42BU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/hooks/useEditors.ts"],"names":["useCallback","useDispatch","useSelector","EditorActions","useEditors","dispatch","loading","state","editor","fetching","editorsList","fetchAllEditors"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,KAAKC,aAAZ,MAA+B,uBAA/B;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,OAAO,GAAGJ,WAAW,CAAEK,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaC,QAApC,CAA3B;AACA,QAAMC,WAAW,GAAGR,WAAW,CAC5BK,KAAD,IAAsBA,KAAK,CAACC,MAAN,CAAaE,WADN,CAA/B;AAIA,QAAMC,eAAe,GAAGX,WAAW,CACjC,kBAAkB;AAChBK,IAAAA,QAAQ,CAACF,aAAa,CAACQ,eAAd,EAAD,CAAR;AACD,GAHgC,EAIjC,CAACN,QAAD,CAJiC,CAAnC;AAOA,SAAO;AACLC,IAAAA,OADK;AAELI,IAAAA,WAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;GApBuBP,U;UACLH,W,EAEDC,W,EACIA,W","sourcesContent":["import { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RootState } from \"../store\";\nimport * as EditorActions from \"../store/Editor.store\";\n\nexport default function useEditors() {\n  const dispatch = useDispatch();\n\n  const loading = useSelector((state: RootState) => state.editor.fetching);\n  const editorsList = useSelector(\n    (state: RootState) => state.editor.editorsList\n  );\n\n  const fetchAllEditors = useCallback(\n    async function () {\n      dispatch(EditorActions.fetchAllEditors());\n    },\n    [dispatch]\n  );\n\n  return {\n    loading,\n    editorsList,\n    fetchAllEditors,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}