{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { PostService } from \"danielbonifacio-sdk\";\nimport { useCallback, useState } from \"react\";\nimport info from \"../utils/info\";\nexport default function useSinglePost() {\n  _s();\n\n  const [post, setPost] = useState();\n  const [loading, setLoading] = useState(false);\n  const publishPost = useCallback(async postId => {\n    await PostService.publishExistingPost(postId);\n    info({\n      title: \"Post publicado\",\n      description: \"Você publicou o post com sucesso\"\n    });\n  }, []);\n  const fetchPost = useCallback(postId => {\n    setLoading(true);\n    PostService.getExistingPost(postId).then(setPost).finally(() => setLoading(false));\n  }, []);\n  return {\n    post,\n    loading,\n    publishPost,\n    fetchPost\n  };\n}\n\n_s(useSinglePost, \"bttdKmnYgcSN3cCslCPFtv5gqUM=\");","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/hooks/useSinglePost.ts"],"names":["PostService","useCallback","useState","info","useSinglePost","post","setPost","loading","setLoading","publishPost","postId","publishExistingPost","title","description","fetchPost","getExistingPost","then","finally"],"mappings":";;AAAA,SAAeA,WAAf,QAAkC,qBAAlC;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,IAAP,MAAiB,eAAjB;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,EAAhC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMO,WAAW,GAAGR,WAAW,CAAC,MAAOS,MAAP,IAA0B;AACxD,UAAMV,WAAW,CAACW,mBAAZ,CAAgCD,MAAhC,CAAN;AACAP,IAAAA,IAAI,CAAC;AACHS,MAAAA,KAAK,EAAE,gBADJ;AAEHC,MAAAA,WAAW,EAAE;AAFV,KAAD,CAAJ;AAID,GAN8B,EAM5B,EAN4B,CAA/B;AAQA,QAAMC,SAAS,GAAGb,WAAW,CAAES,MAAD,IAAoB;AAChDF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAR,IAAAA,WAAW,CAACe,eAAZ,CAA4BL,MAA5B,EACGM,IADH,CACQV,OADR,EAEGW,OAFH,CAEW,MAAMT,UAAU,CAAC,KAAD,CAF3B;AAGD,GAL4B,EAK1B,EAL0B,CAA7B;AAOA,SAAO;AACLH,IAAAA,IADK;AAELE,IAAAA,OAFK;AAGLE,IAAAA,WAHK;AAILK,IAAAA;AAJK,GAAP;AAMD;;GAzBuBV,a","sourcesContent":["import { Post, PostService } from \"danielbonifacio-sdk\";\nimport { useCallback, useState } from \"react\";\nimport info from \"../utils/info\";\n\nexport default function useSinglePost() {\n  const [post, setPost] = useState<Post.Detailed>();\n  const [loading, setLoading] = useState(false);\n\n  const publishPost = useCallback(async (postId: number) => {\n    await PostService.publishExistingPost(postId);\n    info({\n      title: \"Post publicado\",\n      description: \"Você publicou o post com sucesso\",\n    });\n  }, []);\n\n  const fetchPost = useCallback((postId: number) => {\n    setLoading(true);\n    PostService.getExistingPost(postId)\n      .then(setPost)\n      .finally(() => setLoading(false));\n  }, []);\n\n  return {\n    post,\n    loading,\n    publishPost,\n    fetchPost,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}