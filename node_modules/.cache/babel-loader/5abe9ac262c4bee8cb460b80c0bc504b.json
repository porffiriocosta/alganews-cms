{"ast":null,"code":"import { createAction, createAsyncThunk, createReducer, isFulfilled, isPending, isRejected } from \"@reduxjs/toolkit\";\nimport { PostService } from \"danielbonifacio-sdk\";\nconst initialState = {\n  fetching: false,\n  counter: 0,\n  paginated: {\n    page: 0,\n    size: 0,\n    totalElements: 0,\n    totalPages: 1,\n    content: []\n  }\n};\nexport const fetchPosts = createAsyncThunk(\"post/fetchPosts\", async function (query) {\n  const posts = await PostService.getAllPosts(query);\n  return posts;\n});\nexport const increment = createAction(\"post/increment\");\nexport const postReducer = createReducer(initialState, builder => {\n  builder.addCase(increment, state => {\n    state.counter++;\n  }).addCase(fetchPosts.fulfilled, (state, action) => {\n    state.paginated = action.payload;\n  }).addMatcher(isPending, state => {\n    state.fetching = true;\n  }).addMatcher(isFulfilled, state => {\n    state.fetching = false;\n  }).addMatcher(isRejected, state => {\n    state.fetching = false;\n  });\n});","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/store/Post.slice.ts"],"names":["createAction","createAsyncThunk","createReducer","isFulfilled","isPending","isRejected","PostService","initialState","fetching","counter","paginated","page","size","totalElements","totalPages","content","fetchPosts","query","posts","getAllPosts","increment","postReducer","builder","addCase","state","fulfilled","action","payload","addMatcher"],"mappings":"AAAA,SACEA,YADF,EAEEC,gBAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,SALF,EAMEC,UANF,QAOO,kBAPP;AAQA,SAAeC,WAAf,QAAkC,qBAAlC;AAQA,MAAMC,YAA4B,GAAG;AACnCC,EAAAA,QAAQ,EAAE,KADyB;AAEnCC,EAAAA,OAAO,EAAE,CAF0B;AAGnCC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGTC,IAAAA,aAAa,EAAE,CAHN;AAITC,IAAAA,UAAU,EAAE,CAJH;AAKTC,IAAAA,OAAO,EAAE;AALA;AAHwB,CAArC;AAYA,OAAO,MAAMC,UAAU,GAAGf,gBAAgB,CACxC,iBADwC,EAExC,gBAAgBgB,KAAhB,EAAmC;AACjC,QAAMC,KAAK,GAAG,MAAMZ,WAAW,CAACa,WAAZ,CAAwBF,KAAxB,CAApB;AACA,SAAOC,KAAP;AACD,CALuC,CAAnC;AAQP,OAAO,MAAME,SAAS,GAAGpB,YAAY,CAAC,gBAAD,CAA9B;AAEP,OAAO,MAAMqB,WAAW,GAAGnB,aAAa,CAACK,YAAD,EAAgBe,OAAD,IAAa;AAClEA,EAAAA,OAAO,CACJC,OADH,CACWH,SADX,EACuBI,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACf,OAAN;AACD,GAHH,EAIGc,OAJH,CAIWP,UAAU,CAACS,SAJtB,EAIiC,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAChDF,IAAAA,KAAK,CAACd,SAAN,GAAkBgB,MAAM,CAACC,OAAzB;AACD,GANH,EAOGC,UAPH,CAOcxB,SAPd,EAO0BoB,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAAChB,QAAN,GAAiB,IAAjB;AACD,GATH,EAUGoB,UAVH,CAUczB,WAVd,EAU4BqB,KAAD,IAAW;AAClCA,IAAAA,KAAK,CAAChB,QAAN,GAAiB,KAAjB;AACD,GAZH,EAaGoB,UAbH,CAacvB,UAbd,EAa2BmB,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAAChB,QAAN,GAAiB,KAAjB;AACD,GAfH;AAgBD,CAjBuC,CAAjC","sourcesContent":["import {\n  createAction,\n  createAsyncThunk,\n  createReducer,\n  isFulfilled,\n  isPending,\n  isRejected,\n} from \"@reduxjs/toolkit\";\nimport { Post, PostService } from \"danielbonifacio-sdk\";\n\ninterface PostSliceState {\n  paginated?: Post.Paginated;\n  fetching: boolean;\n  counter: number;\n}\n\nconst initialState: PostSliceState = {\n  fetching: false,\n  counter: 0,\n  paginated: {\n    page: 0,\n    size: 0,\n    totalElements: 0,\n    totalPages: 1,\n    content: [],\n  },\n};\n\nexport const fetchPosts = createAsyncThunk(\n  \"post/fetchPosts\",\n  async function (query: Post.Query) {\n    const posts = await PostService.getAllPosts(query);\n    return posts;\n  }\n);\n\nexport const increment = createAction(\"post/increment\");\n\nexport const postReducer = createReducer(initialState, (builder) => {\n  builder\n    .addCase(increment, (state) => {\n      state.counter++;\n    })\n    .addCase(fetchPosts.fulfilled, (state, action) => {\n      state.paginated = action.payload;\n    })\n    .addMatcher(isPending, (state) => {\n      state.fetching = true;\n    })\n    .addMatcher(isFulfilled, (state) => {\n      state.fetching = false;\n    })\n    .addMatcher(isRejected, (state) => {\n      state.fetching = false;\n    });\n});\n"]},"metadata":{},"sourceType":"module"}