{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as AuthActions from '../store/Auth.slice';\nexport default function useAuth() {\n  _s();\n\n  const dispatch = useDispatch();\n  const user = useSelector(s => s.auth.user);\n  const fetching = useSelector(s => s.auth.fetching);\n  const fetchUser = useCallback(userId => {\n    return dispatch(AuthActions.fetchUser(userId)).unwrap();\n  }, [dispatch]);\n  return {\n    user,\n    fetching,\n    fetchUser\n  };\n}\n\n_s(useAuth, \"a+NZyl+JWoqa2K/dlSj7F5oOn/8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});","map":{"version":3,"sources":["D:/ReactProjetos/alganews-cms/src/core/hooks/useAuth.ts"],"names":["useCallback","useDispatch","useSelector","AuthActions","useAuth","dispatch","user","s","auth","fetching","fetchUser","userId","unwrap"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAMK,IAAI,GAAGJ,WAAW,CAAEK,CAAD,IAAkBA,CAAC,CAACC,IAAF,CAAOF,IAA1B,CAAxB;AACA,QAAMG,QAAQ,GAAGP,WAAW,CAAEK,CAAD,IAAkBA,CAAC,CAACC,IAAF,CAAOC,QAA1B,CAA5B;AAEA,QAAMC,SAAS,GAAGV,WAAW,CAC1BW,MAAD,IAAoB;AAClB,WAAON,QAAQ,CAACF,WAAW,CAACO,SAAZ,CAAsBC,MAAtB,CAAD,CAAR,CAAwCC,MAAxC,EAAP;AACD,GAH0B,EAI3B,CAACP,QAAD,CAJ2B,CAA7B;AAOA,SAAO;AACLC,IAAAA,IADK;AAELG,IAAAA,QAFK;AAGLC,IAAAA;AAHK,GAAP;AAKD;;GAlBuBN,O;UACLH,W,EAEJC,W,EACIA,W","sourcesContent":["import { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from '../store';\nimport * as AuthActions from '../store/Auth.slice';\n\nexport default function useAuth() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  const user = useSelector((s: RootState) => s.auth.user);\n  const fetching = useSelector((s: RootState) => s.auth.fetching);\n\n  const fetchUser = useCallback(\n    (userId: number) => {\n      return dispatch(AuthActions.fetchUser(userId)).unwrap();\n    },\n    [dispatch]\n  );\n\n  return {\n    user,\n    fetching,\n    fetchUser,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}